---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin-server
  namespace: jellyfin
spec:
  releaseName: jellyfin-server
  chart:
    spec:
      chart: jellyfin
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: jellyfin-helm
  interval: 2m
  values:
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: kube-system/macvlan-eno1

    resources:
      limits:
        nvidia.com/gpu: 1
    deploymentStrategy:
      type: Recreate  # delete old pods first to release gpu resources

    initContainers:
      - name: setup-nvidia-driver-support
        image: alpine:20250108
        command: ["/bin/sh"]
        args: ["-c", "echo 'libnvidia-opencl.so.1' > /vendors/nvidia.icd"]
        volumeMounts:
          - name: etc-opencl-vendors
            mountPath: "/vendors"

    jellyfin:
      env:
        - name: JELLYFIN_HOSTWEBCLIENT
          value: "true"  # TODO: serve jellyfin-vue frontend too?
        - name: TZ
          value: "Europe/Copenhagen"
        - name: JELLYFIN_DATA_DIR
          value: "/config/data"
        - name: JELLYFIN_CONFIG_DIR
          value: "/config"
        - name: JELLYFIN_CACHE_DIR
          value: "/cache"
        - name: JELLYFIN_LOG_DIR
          value: "/log"
        - name: NVIDIA_DRIVER_CAPABILITIES  # necessary for enabling NVENC transcoding
          value: "all"
        - name: NVIDIA_VISIBLE_DEVICES  # necessary for enabling NVENC transcoding
          value: "all"

    service:
      port: 8096

    # TODO: healthchecks? https://jellyfin.org/docs/general/networking/monitoring/

    persistence:
      # Config files for how the application has been configured
      config:
        # Implicitly mounted on /config
        enabled: true
        size: "5Gi"
      media:
        enabled: false

    volumes:
      - name: movies
        nfs:
          server: "10.0.0.3"
          path: "/mnt/pool0/multimedia/clean"
          readOnly: true
      - name: cache
        emptyDir: {}
      - name: etc-opencl-vendors
        emptyDir: {}

    volumeMounts:
      - name: movies
        mountPath: "/movies"
      - name: cache
        mountPath: "/cache"
      - name: etc-opencl-vendors
        mountPath: "/etc/OpenCL/vendors"

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jellyfin-server
  namespace: jellyfin
  annotations:
    external-dns.alpha.kubernetes.io/target: ingress.k8s.thaibert.com
spec:
  entryPoints:
    - intweb
    - intwebsecure
  routes:
    - match: "Host(`jellyfin.k8s.thaibert.com`)"
      kind: Rule
      services:
        - name: jellyfin-server
          port: 8096

---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: jellyfin-helm
  namespace: jellyfin
spec:
  interval: 30m
  url: https://jellyfin.github.io/jellyfin-helm

