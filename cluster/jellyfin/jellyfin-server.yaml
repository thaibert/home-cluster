apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin-server
  namespace: jellyfin
spec:
  releaseName: jellyfin-server
  chart:
    spec:
      chart: jellyfin
      version: 9.5.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
  interval: 2m
  values:
# Stolen from https://raw.githubusercontent.com/k8s-at-home/charts/master/charts/stable/jellyfin/values.yaml
# 
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

    image:
      repository: jellyfin/jellyfin
      tag: 10.8.10
      pullPolicy: IfNotPresent

    resources:
      limits:
        nvidia.com/gpu: 1

    env:
      # JELLYFIN_HOSTWEBCLIENT: "false"  # TODO: serve jellyfin-web?
      TZ: "Europe/Copenhagen"
      JELLYFIN_DATA_DIR: "/data"
      JELLYFIN_CONFIG_DIR: "/config"
      JELLYFIN_CACHE_DIR: "/cache"
      JELLYFIN_LOG_DIR: "/log"
      NVIDIA_DRIVER_CAPABILITIES: "all"  # necessary for enabling NVENC transcoding
      NVIDIA_VISIBLE_DEVICES: "all"  # necessary for enabling NVENC transcoding
#      DOMAIN_NAME: "served.on.domain.com"

    service:
      main:
        ports:
          http: # TODO: deprecate the http-only port 8096
            port: 8096
            enabled: true
          https:
            port: 8920
            enabled: true

# TODO healthchecks https://jellyfin.org/docs/general/networking/monitoring/


    persistence:
      # Jellyfin data (like temporary transcoded video files, which movies have been played, etc)
      data:
        enabled: true
        type: "pvc"
        accessMode: "ReadWriteOnce"
        size: "20Gi"
        mountPath: "/data"
    
      # Server config files
      config:
        enabled: true
        type: "pvc"
        size: "10Gi"
        accessMode: "ReadWriteOnce"
        mountPath: "/config"
 
      # Cache does NOT contain temporary transcoding data.
      # It gets auto-cleared every 12 hours, apparently..
      cache:
        enabled: true
        type: "emptyDir"
        mountPath: "/cache"

      # Actual media :-)
      media:
        enabled: true
        mountPath: "/media"
        type: "custom"
        accessMode: "ReadWriteMany"
        readOnly: true
        volumeSpec:
          nfs:
            server: "10.0.0.3"
            path: "/mnt/pool0/multimedia/clean"
      
    command: ["/bin/sh"] 
    args: ["-c", "mkdir -p /etc/OpenCL/vendors  &&  echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd  &&  ./jellyfin/jellyfin"]

    podSecurityContext: {}
#   runAsUser: 568
#   runAsGroup: 568
#   fsGroup: 568
#   # Hardware acceleration using an Intel iGPU w/ QuickSync
#   # These IDs below should be matched to your `video` and `render` group on the host
#   # To obtain those IDs run the following grep statement on the host:
#   # $ cat /etc/group | grep "video\|render"
#   # video:x:44:
#   # render:x:109:
#   supplementalGroups:
#   - 44
#   - 109

# resources:
#   requests:
#     # Hardware acceleration using an Intel iGPU w/ QuickSync and
#     # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
#     gpu.intel.com/i915: 1
#     cpu: 200m
#     memory: 256Mi
#   limits:
#     # Hardware acceleration using an Intel iGPU w/ QuickSync and
#     # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
#     gpu.intel.com/i915: 1
#     memory: 4096Mi


---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jellyfin-server-client-discovery-local-network
  namespace: jellyfin
  annotations:
    external-dns.alpha.kubernetes.io/target: traefik.k8s.thaibert.com
spec:
  entryPoints:
  - port7359udp
  routes:
  - match: "Host(`jellyfin.k8s.thaibert.com`)"
    kind: Rule
    services:
      - name: jellyfin-server
        port: 7359
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jellyfin-server
  namespace: jellyfin
  annotations:
    external-dns.alpha.kubernetes.io/target: traefik.k8s.thaibert.com
spec:
  entryPoints:
  - intweb
  - intwebsecure
  - port8096tcp
  routes:
  - match: "Host(`jellyfin.k8s.thaibert.com`)"
    kind: Rule
    services:
      - name: jellyfin-server
        port: 8096
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: k8s-at-home
  namespace: jellyfin
spec:
  interval: 30m
  url: https://k8s-at-home.com/charts/
